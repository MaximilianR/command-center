import { ganache, RenNetworkDetails } from "@renproject/contracts";
import HDWalletProvider from "@truffle/hdwallet-provider";
import { should } from "chai";
import { join } from "path";
import Web3 from "web3";

should();

const snapshotEVM = async (web3: Web3) => {
    return await web3.currentProvider.send("evm_snapshot", []);
};

export const resetEVM = async (web3: Web3, snapshotID: string) => {
    await web3.currentProvider.send("evm_revert", [snapshotID]);
};

export type Provider = { engine: { stop: () => void; } };

export const createWeb3 = async () => {
    // Mnemonic generated by `ganache-cli -d`
    const mnemonic = "myth like bonus scare over problem client lizard pioneer submit female collect";
    const provider = new HDWalletProvider(mnemonic, "http://localhost:8545");
    const web3: Web3 = new Web3(provider);
    const networkID: number = await web3.eth.net.getId();
    const network: RenNetworkDetails = ganache(join(process.cwd(), "./node_modules/darknode-sol/build/development/"), networkID);
    const address: string = (await web3.eth.getAccounts())[0];

    return { web3, networkID, network, address, provider };
};

// This is run by Jest once before running any tests. Globals can be accessed by
// the global teardown but not by the tests. (`globalSetup` is configured in
// `package.json`).
const globalSetup = async () => {
    const { web3, provider } = await createWeb3();
    // tslint:disable-next-line: no-any
    (global as any).web3 = web3;
    // tslint:disable-next-line: no-any
    (global as any).snapshotID = await snapshotEVM(web3);
    // tslint:disable-next-line: no-any
    (global as any).provider = provider;
};

export default globalSetup;
